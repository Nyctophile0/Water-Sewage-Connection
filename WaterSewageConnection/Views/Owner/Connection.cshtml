@model WaterSewageConnection.Models.ConnectionDetails

@{
    ViewData["Title"] = "Connection";
    Layout = "~/Views/Shared/_OwnerLayout.cshtml";
}
<script src="~/js/jquery.min.js"></script>
<!-- Page header start -->
<div class="page-header">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/Owner/Dashboard">होम</a></li>
		<li class="breadcrumb-item active">कनेक्शन के लिए आवेदन करें</li>
	</ol>
	
</div>


<!-- Page header end -->
<div class="content-wrapper">
	<div class="row gutters">
		<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">

			@using (Html.BeginForm("Connection", "Owner", FormMethod.Post, new { encType = "multipart/form-data" }))
			{
				@Html.AntiForgeryToken()

				<div class="accordion toggle-icons" id="toggleIcons">
					<div class="accordion-container">
						<div class="accordion-header" id="toggleIconsOne">
							<a href="#" class="" data-toggle="collapse" data-target="#toggleIconsCollapseOne" aria-expanded="true" aria-controls="toggleIconsCollapseOne">
								<i class="icon icon-border_color"></i> पुष्टि करें
							</a>
						</div>
						<div id="toggleIconsCollapseOne" class="collapse show" aria-labelledby="toggleIconsOne" data-parent="">
							<div class="accordion-body">
								<div class="row gutters">
									<div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
										<div class="form-group">
											<label for="ConnectionName" class="col-form-label">Applying for</label><br />

											<div class="form-check form-check-inline">
												<input class="form-check-input" type="radio" name="ConnectionName" id="water" value="Water">
												<label class="form-check-label" for="water">जल</label>
											</div>
											<div class="form-check form-check-inline">
												<input class="form-check-input" type="radio" name="ConnectionName" id="sewage" value="Sewage">
												<label class="form-check-label" for="sewage">सीवर</label>
											</div>
											<div class="form-check form-check-inline">
												<input class="form-check-input" type="radio" name="ConnectionName" id="ferrule" value="Ferrule">
												<label class="form-check-label" for="ferrule">फैरूल शिफ्टिंग</label>
											</div>
											<div class="form-check form-check-inline">
												<input class="form-check-input" type="radio" name="ConnectionName" id="pipe" value="Pipe">
												<label class="form-check-label" for="pipe">पाइप बदलवाना</label>
											</div>
											<div class="form-check form-check-inline">
												<input class="form-check-input" type="radio" name="ConnectionName" id="watersewage" value="watersewage">
												<label class="form-check-label" for="watersewage">जल/ सीवर</label>
											</div>
										</div>
									</div>
									<div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12" id="connectiondiv">
										<div class="form-group">
											<label for="ConnectionType" class="col-form-label">कनेक्शन</label><br />

											<div class="form-group">
												<div class="form-check form-check-inline">
													<input class="form-check-input" type="radio" name="ConnectionType" id="FreshConnection" value="Fresh">
													<label class="form-check-label" for="FreshConnection">नया</label>
												</div>
												<div class="form-check form-check-inline">
													<input class="form-check-input" type="radio" name="ConnectionType" id="ExtraConnection" value="Extra">
													<label class="form-check-label" for="ExtraConnection">एक्स्ट्रा </label>
												</div>
											</div>

										</div>
									</div>
								</div>

								<div class="row gutters">

										<div class="col-xl-2 col-lg-2 col-md-2 col-sm-2 col-12" id="noofconnections">
											<div class="form-group">
												<label for="txtNoofConnections" class="col-form-label">No of Connections</label>
												@Html.TextBoxFor(m=>m.NoofConnections, new {@class="form-control", @id="txtNoofConnections", @onkeypress = "return /[0-9/]/i.test(event.key)"})

											</div>
										</div>

										
											<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12" id="connection1">
												<div class="form-group">
													<label for="txtPreviousConnection1" class="col-form-label">Previous Connection No1</label>
													@Html.TextBoxFor(m=>m.PreviousConnection1, new {@class="form-control", @id="txtPreviousConnection1", @onkeypress = "return /[a-z0-9-//]/i.test(event.key)"})

												</div>
											</div>

											<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12" id="connection2">
												<div class="form-group">
													<label for="txtPreviousConnection2" class="col-form-label">Previous Connection No2</label>
													@Html.TextBoxFor(m=>m.PreviousConnection2, new {@class="form-control", @id="txtPreviousConnection2", @onkeypress = "return /[a-z0-9-//]/i.test(event.key)"})

												</div>
											</div>
										


										
									

									

									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="txtApplicantName" class="col-form-label">आवेदक उपभोक्ता का नाम</label>
											@Html.TextBoxFor(m=>m.ApplicantName, new {@class="form-control", @id="txtApplicantName", @onkeypress = "return /[a-z /]/i.test(event.key)"})

										</div>
									</div>
									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="txtFatherSpouseName" class="col-form-label">पिता/ जीवनसाथी का नाम</label>
											@Html.TextBoxFor(m=>m.FatherSpouseName, new {@class="form-control", @id="txtFatherSpouseName", @onkeypress = "return /[a-z /]/i.test(event.key)"})

										</div>
									</div>
									<div class="col-xl-6 col-lg-6 col-md-6 col-sm-3 col-12">
										<div class="form-group">
											<label for="inputAddress" class="col-form-label">पूरा पता</label>

											@Html.TextAreaFor(m=>m.ApplicantAddress, new {@class="form-control", @id="txtApplicantAddress", @style="resize:none;", @rows="2", @onkeypress = "return /[a-z0-9-/, /]/i.test(event.key)"})
										</div>
									</div>

									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="zoneddl" class="col-form-label">ज़ोन</label>
											<select class="form-control " id="zoneddl" name="ZoneId">
												
											</select>
										</div>
									</div>

									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="wardddl" class="col-form-label">वार्ड</label>
											<select class="form-control "  id="wardddl" name="WardId">
												
											</select>
										</div>
									</div>

									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="mohalladdl" class="col-form-label">मोहल्ला</label>
											<select class="form-control "  id="mohalladdl" name="MohallaId">
												
											</select>
										</div>
									</div>

									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="LandLord" class="col-form-label">किरायेदार/ किरायेदारिनी</label><br />


											<div class="form-check form-check-inline">
												<input class="form-check-input" type="radio" name="LandLord" id="TenantYes" value="Yes">
												<label class="form-check-label" for="TenantYes">हाँ</label>
											</div>
											<div class="form-check form-check-inline">
												<input class="form-check-input" type="radio" name="LandLord" id="TenantNo" value="No">
												<label class="form-check-label" for="TenantNo">नहीं</label>
											</div>
										</div>
									</div>


									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="txtBuildingOwnerName" class="col-form-label">भवन स्वामी/ स्वामिनी का नाम</label>
											@Html.TextBoxFor(m=>m.BuildingOwnerName, new {@class="form-control", @id="txtBuildingOwnerName", @onkeypress = "return /[a-z /]/i.test(event.key)"})

										</div>
									</div>

									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="txtPlumberName" class="col-form-label">अनुजा प्राप्त प्लाम्बर (उपभोक्ता द्वारा भरा जाये)</label>
											@Html.TextBoxFor(m=>m.PlumberName, new {@class="form-control", @id="txtPlumberName", @onkeypress = "return /[a-z /]/i.test(event.key)"})
										</div>
									</div>

									@* <div class="col-xl-4 col-lg-4 col-md-4 col-sm-12 col-4">
								<div class="form-group">
								<label for="education">कार को विवरण नया जल/सीचर संयोजन लेने अथवा संयोजन क्रमांक का फैरूल बढ़ाने शिफ्ट करने पाइप बदलवाने हेतु।</label>
								<input type="text" class="form-control-sm" id="education" placeholder="">
								</div>
								</div> *@

									@* <div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="txtPlumberName" class="col-form-label">प्लम्बर का नाम</label>
											@Html.TextBoxFor(m=>m.PlumberName, new {@class="form-control", @id="txtPlumberName", @onkeypress = "return /[a-z /]/i.test(event.key)"})
										</div>
									</div> *@
									<div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
										<div class="form-group">
											<label for="txtPlumberMobile" class="col-form-label">प्लम्बर का मोबाइल नo</label>
											@Html.TextBoxFor(m=>m.PlumberMobile, new {@class="form-control", @id="txtPlumberMobile", @onkeypress = "return /[0-9/]/i.test(event.key)", @maxlength="10"})
										</div>
									</div>




								</div>
							</div>
						</div>
					</div>

					<div class="accordion-container">
						<div class="accordion-header" id="toggleIconsTwo">
							<a href="#" class="" data-toggle="collapse" data-target="#toggleIconsCollapseTwo" aria-expanded="true" aria-controls="toggleIconsCollapseTwo">
								<i class="icon icon-attach_file"></i> डाक्यूमेंट्स अपलोड करें
							</a>
						</div>
						<div id="toggleIconsCollapseTwo" class="collapse show" aria-labelledby="toggleIconsTwo" data-parent="">
							<div class="accordion-body">
								<div class="row gutters">
									<div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12">
										<div class="form-group">
											<label for="HouseMap" class="col-form-label">घर का नक्शा अपलोड करें</label>
											@Html.TextBoxFor(m=>m.HouseMap, new {@type="file", @class="form-control-sm", @id="HouseMap", @name="HouseMapFile"})
										</div>
									</div>

								</div>

								<div class="row gutters">
									<div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12">
										<div class="form-group">
											<label for="ElectricityBill" class="col-form-label">बिजली का बिल अपलोड करें</label>
											@Html.TextBoxFor(m=>m.ElectricityBill, new {@type="file", @class="form-control-sm", @id="ElectricityBill", @name="ElectricityBillFile"})
										</div>
									</div>
								</div>

								<div class="row gutters">
									<div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12">
										<div class="form-group">

											<label for="HouseTax" class="col-form-label">नगर निगम हाउस टैक्स असेसमेंट कॉपी अपलोड करें</label>
											@Html.TextBoxFor(m=>m.HouseTax, new {@type="file", @class="form-control-sm", @id="HouseTax", @name="HouseTaxFile"})


										</div>
									</div>

								</div>

								<div class="row gutters">
									<div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12">
										<div class="form-group">

											<label for="Registry" class="col-form-label">रजिस्ट्री कॉपी अपलोड करें</label>
											@Html.TextBoxFor(m=>m.Registry, new {@type="file", @class="form-control-sm", @id="Registry", @name="RegistryFile"})


										</div>
									</div>
								</div>

							</div>
						</div>
					</div>
				</div>


				<div class="text-right">
					<input class="btn btn-info" type="reset" value="रीसेट करें">
					<button type="submit" id="submit2" name="submit2" class="btn btn-success">सेव करें</button>
				</div>
			}
			

		</div>

		
	</div>
</div>
	



<script async type="text/javascript">

	$(document).ready(function () {
		$('#ownerdashboard').removeClass("active-page");
		$('#connection').addClass("active-page");

		bindZone('zoneddl', -1);
		bindWard('wardddl', -1);
		bindMohalla('mohalladdl', -1);

		$('#zoneddl').change(function () {
			bindWard('wardddl', -1);
		});

		$('#wardddl').change(function () {
			bindMohalla('mohalladdl', -1);
		});

		$('#noofconnections').hide();
		$('#connection1').hide();
		$('#connection2').hide();

		// Add event listener to the parent div
		$('#connectiondiv').on('click', 'input[type="radio"][name="ConnectionType"]', function () {
			var selectedval = $(this).val();
			
			if (selectedval == "Extra") {
				$('#noofconnections').show();
			}
			else
			{
				$('#noofconnections').hide();
				$('#connection1').hide();
				$('#connection2').hide();
			}
		});

		$('#txtNoofConnections').keyup(function () {
			
			var $connections = $(this).val();
			console.log($connections);
			if ($connections == 1) {
				
				$('#connection1').show();
				$('#connection2').hide();
			}
			else if ($connections == 2) {
				
				$('#connection1').show();
				$('#connection2').show();
			}
			else {
				$('#connection1').hide();
				$('#connection2').hide();
			}
		});

		


	});

	function bindZone(id, defaultSelectionValues) {

		defaultSelectionValues = typeof defaultSelectionValues !== 'undefined' ? defaultSelectionValues : '';
		if (defaultSelectionValues == -1 || defaultSelectionValues == 0 || defaultSelectionValues == '-1' || defaultSelectionValues == '') {
			defaultSelectionValues = '-1';
		}
		var obj = new Object();
		obj.Action = "bindZone";

		$.ajax({
			type: 'POST',
			url: '/Dropdown/fillDropdown',
			data: { Action: obj.Action },
			success: function (Data) {
				var ddl = $('#' + id);
				ddl.empty();
				ddl.append($('<option/>', {
					value: "-1",
					text: "Choose option "
				}));

				$.each(Data, function (index, rowData) {
					ddl.append($('<option/>', {
						value: rowData.id,
						text: rowData.value
					}));
				});
				ddl.val(defaultSelectionValues);
			},
			error: function (errorData) {
				console.log(errorData);
			}
		});

	}
	
	function bindWard(id, defaultSelectionValues) {

		defaultSelectionValues = typeof defaultSelectionValues !== 'undefined' ? defaultSelectionValues : '';
		if (defaultSelectionValues == -1 || defaultSelectionValues == 0 || defaultSelectionValues == '-1' || defaultSelectionValues == '') {
			defaultSelectionValues = '-1';
		}
		var obj = new Object();
		obj.Action = "bindWard";
		obj.ZoneId = $('#zoneddl').val();
		$.ajax({
			type: 'POST',
			url: '/Dropdown/fillDropdown',
			data: { Action: obj.Action, ZoneId:obj.ZoneId },
			success: function (Data) {
				var ddl = $('#' + id);
				ddl.empty();
				ddl.append($('<option/>', {
					value: "-1",
					text: "Choose option "
				}));

				$.each(Data, function (index, rowData) {
					ddl.append($('<option/>', {
						value: rowData.id,
						text: rowData.value
					}));
				});
				ddl.val(defaultSelectionValues);
			},
			error: function (errorData) {
				console.log(errorData);
			}
		});

	}

	function bindMohalla(id, defaultSelectionValues) {

		defaultSelectionValues = typeof defaultSelectionValues !== 'undefined' ? defaultSelectionValues : '';
		if (defaultSelectionValues == -1 || defaultSelectionValues == 0 || defaultSelectionValues == '-1' || defaultSelectionValues == '') {
			defaultSelectionValues = '-1';
		}
		var obj = new Object();
		obj.Action = "bindMohalla";
		obj.WardId = $('#wardddl').val();

		$.ajax({
			type: 'POST',
			url: '/Dropdown/fillDropdown',
			data: { Action: obj.Action, WardId: obj.WardId },
			success: function (Data) {
				var ddl = $('#' + id);
				ddl.empty();
				ddl.append($('<option/>', {
					value: "-1",
					text: "Choose option "
				}));

				$.each(Data, function (index, rowData) {
					ddl.append($('<option/>', {
						value: rowData.id,
						text: rowData.value
					}));
				});
				ddl.val(defaultSelectionValues);
			},
			error: function (errorData) {
				console.log(errorData);
			}
		});

	}
</script>